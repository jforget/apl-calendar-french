#!/usr/bin/perl
# -*- encoding: utf-8; indent-tabs-mode: nil -*-
#
#     Script to merge the generated APL script with chunks from other origin
#     Copyright (C) 2015 Jean Forget
#
#     This program is distributed under the GNU Public License version 1 or later
#
#     You can find the text of the license in the F<LICENSE> file or at
#     L<http://www.gnu.org/licenses/gpl-1.0.html>.
#
#     Here is the summary of GPL:
#
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 1, or (at your option)
#     any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program; if not, write to the Free Software Foundation,
#     Inc., L<http://www.fsf.org/>.
#

use v5.10;
use strict;
use warnings;

my $script_av  = 'calendar-french.apl-1';
my $script_ap  = 'workspaces/calfr.apl';
my $testdata   = 'testapl';
my $teststring = 'testapl1';
my $feasts     = 'feasts';

open my $av, '<:encoding(UTF-8)', $script_av
  or die "opening $script_av $!";
open my $ap, '>:encoding(UTF-8)', $script_ap
  or die "opening $script_ap $!";

# Portability issue: maybe apl is installed in another directory
print $ap "#!/usr/bin/apl -f\n";

while (<$av>) {
  print $ap $_;
  if (/include here the contents of testapl(?!1)/) {
    open my $sc, '<:encoding(UTF-8)', $testdata
      or die "opening $testdata $!";
    while (<$sc>) {
      print $ap $_;
    }
    close $sc
      or die "Closing $testdata $!";
  }
  elsif (/include here the contents of testapl1/) {
    open my $sc, '<:encoding(UTF-8)', $teststring
      or die "opening $teststring $!";
    while (<$sc>) {
      print $ap $_;
    }
    close $sc
      or die "Closing $teststring $!";
  }
  elsif (/include here the contents of feasts/) {
    open my $sc, '<:encoding(UTF-8)', $feasts
      or die "opening $feasts $!";
    while (<$sc>) {
      print $ap $_;
    }
    close $sc
      or die "Closing $feasts $!";
  }
}
close $av
  or die "Closing $script_av $!";
close $ap
  or die "Closing $script_ap $!";
